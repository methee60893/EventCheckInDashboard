@page
@model EventCheckInDashboard.Pages.ApoModel
@{
    ViewData["Title"] = "Dashboard D&S 2025 - 05 EXCLUSIVE CHILL & TALK WITH APO NATTAWIN";
}
<div class="row">
    <!-- Left Column -->
    <div class="col-lg-6">
        <!-- Event Section -->
        <div class="event-section">
            <div class="event-header">
                <div class="event-image">
                    <div class="event-placeholder">APO<br>NATTAWIN</div>
                    <!-- หรือใส่รูปจริง: <img src="path-to-image.jpg" alt="APO NATTAWIN"> -->
                </div>
                <div class="event-info">
                    <div class="event-title">5. EXCLUSIVE CHILL & TALK<br>WITH APO NATTAWIN</div>
                    <div class="event-actual">ACTUAL <span id="actualValue">XXX</span> คน</div>
                </div>
            </div>
        </div>

        <!-- Stacked Bar Chart -->
        <div class="chart-section-5">
            <div class="chart-wrapper-5">
                <canvas id="stackedBarChart"></canvas>
            </div>
        </div>

        <!-- Left Table -->
        <div class="table-container">
            <table class="table table-bordered data-table">
                <thead>
                    <tr>
                        <th colspan="2">17 OCT</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="row-video">
                        <td class="total-label">แลก360กะรัต</td>
                        <td><strong>300</strong></td>
                    </tr>
                    <tr class="row-member">
                        <td class="total-label">สมาชิกใหม่</td>
                        <td><strong>50</strong></td>
                    </tr>
                    <tr class="row-card">
                        <td class="total-label">CARD X</td>
                        <td><strong>30</strong></td>
                    </tr>
                    <tr class="row-total">
                        <td class="total-label">TOTAL BY DAY</td>
                        <td><strong>380</strong></td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>

    <!-- Right Column -->
    <div class="col-lg-6">
        <!-- 3D Pie Chart -->
        <div class="pie-container-5">
            <div class="pie-wrapper">
                <div class="pie-chart-3d">
                    <canvas id="pieChart"></canvas>
                </div>
            </div>
        </div>
        <p class="section-title">จำนวนสมาชิกแต่ละTIERทั้งหมดที่ร่วมกิจกรรม</p>

        <!-- Right Table -->
        <div class="table-container">
            <table class="table table-bordered data-table">
                <thead>
                    <tr>
                        <th colspan="2">17 OCT</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="row-navy">
                        <td class="total-label">NAVY</td>
                        <td><strong>350</strong></td>
                    </tr>
                    <tr class="row-scarlet">
                        <td class="total-label">SCARLET</td>
                        <td><strong>30</strong></td>
                    </tr>
                    <tr class="row-crown">
                        <td class="total-label">CROWN</td>
                        <td><strong>0</strong></td>
                    </tr>
                    <tr class="row-vega">
                        <td class="total-label">VEGA</td>
                        <td><strong>0</strong></td>
                    </tr>
                    <tr class="row-total">
                        <td class="total-label">TOTAL MEMBER BY DAY</td>
                        <td><strong>380</strong></td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>
<script>
    // ข้อมูลสำหรับ Stacked Bar Chart
    const stackedData = {
        labels: ['17-Oct'],
        datasets: [
            {
                label: 'แลก360กะรัต',
                data: [300],
                backgroundColor: 'rgba(180, 83, 9, 0.9)',
                borderWidth: 0,
                hoverBackgroundColor: 'rgba(180, 83, 9, 1)',
            },
            {
                label: 'สมาชิกใหม่',
                data: [50],
                backgroundColor: 'rgba(220, 38, 38, 0.9)',
                borderWidth: 0,
                hoverBackgroundColor: 'rgba(220, 38, 38, 1)',
            },
            {
                label: 'CARD X',
                data: [30],
                backgroundColor: 'rgba(99, 102, 241, 0.9)',
                borderWidth: 0,
                hoverBackgroundColor: 'rgba(99, 102, 241, 1)',
            }
        ]
    };

    // สร้าง Stacked Bar Chart
    const stackedCtx = document.getElementById('stackedBarChart').getContext('2d');
    const stackedChart = new Chart(stackedCtx, {
        type: 'bar',
        data: stackedData,
        options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: {
                    position: 'bottom',
                    labels: {
                        usePointStyle: true,
                        padding: 20,
                        font: {
                            size: 13,
                            family: 'Inter',
                            weight: 500
                        }
                    }
                },
                tooltip: {
                    backgroundColor: 'rgba(0, 0, 0, 0.8)',
                    padding: 12,
                    cornerRadius: 8,
                    titleFont: {
                        size: 14,
                        family: 'Inter'
                    },
                    bodyFont: {
                        size: 13,
                        family: 'Inter'
                    },
                    callbacks: {
                        afterBody: function(context) {
                            let total = 0;
                            context.forEach(item => {
                                total += item.parsed.y;
                            });
                            return '\nรวมทั้งหมด: ' + total + ' คน';
                        }
                    }
                },
                datalabels: {
                    color: '#fff',
                    font: {
                        weight: 'bold',
                        size: 14
                    },
                    formatter: function(value, context) {
                        return value;
                    }
                }
            },
            scales: {
                x: {
                    stacked: true,
                    ticks: {
                        font: {
                            size: 13,
                            family: 'Inter',
                            weight: 600
                        }
                    },
                    grid: {
                        display: false
                    }
                },
                y: {
                    stacked: true,
                    beginAtZero: true,
                    max: 1000,
                    ticks: {
                        stepSize: 200,
                        font: {
                            size: 12,
                            family: 'Inter'
                        }
                    },
                    grid: {
                        color: 'rgba(0, 0, 0, 0.05)'
                    }
                }
            },
            animation: {
                duration: 1500,
                easing: 'easeInOutQuart'
            }
        }
    });

    // แสดงตัวเลขรวมด้านบนแท่ง
    Chart.register({
        id: 'topLabels',
        afterDatasetsDraw: function(chart) {
            const ctx = chart.ctx;
            chart.data.datasets.forEach(function(dataset, i) {
                const meta = chart.getDatasetMeta(i);
                if (!meta.hidden) {
                    meta.data.forEach(function(element, index) {
                        if (i === chart.data.datasets.length - 1) {
                            // แสดงผลรวมเฉพาะ dataset สุดท้าย
                            ctx.fillStyle = '#1f2937';
                            const fontSize = 16;
                            const fontStyle = 'bold';
                            const fontFamily = 'Inter';
                            ctx.font = fontStyle + ' ' + fontSize + 'px ' + fontFamily;

                            // คำนวณผลรวม
                            let total = 0;
                            chart.data.datasets.forEach(function(ds) {
                                total += ds.data[index];
                            });

                            const dataString = total.toString();
                            ctx.textAlign = 'center';
                            ctx.textBaseline = 'bottom';

                            const padding = 5;
                            const position = element.tooltipPosition();
                            ctx.fillText(dataString, position.x, position.y - padding);
                        }
                    });
                }
            });
        }
    });

    // ข้อมูลสำหรับ 3D Pie Chart
    const pieData = {
        labels: ['NAVY', 'SCARLET', 'CROWN', 'VEGA'],
        datasets: [{
            data: [350, 30, 0, 0],
            backgroundColor: [
                'rgba(59, 130, 246, 0.95)',
                'rgba(239, 68, 68, 0.95)',
                'rgba(156, 163, 175, 0.5)',
                'rgba(234, 179, 8, 0.5)'
            ],
            borderWidth: 6,
            borderColor: '#fff',
            hoverOffset: 20,
            hoverBorderWidth: 8
        }]
    };

    // สร้าง 3D Pie Chart
    const pieCtx = document.getElementById('pieChart').getContext('2d');
    const pieChart = new Chart(pieCtx, {
        type: 'doughnut',
        data: pieData,
        options: {
            responsive: true,
            maintainAspectRatio: false,
            cutout: '50%',
            plugins: {
                legend: {
                    position: 'right',
                    labels: {
                        padding: 20,
                        font: {
                            size: 13,
                            family: 'Inter',
                            weight: 500
                        },
                        usePointStyle: true,
                        pointStyle: 'circle',
                        generateLabels: function(chart) {
                            const data = chart.data;
                            return data.labels.map((label, i) => {
                                const value = data.datasets[0].data[i];
                                return {
                                    text: label + ' (' + value + ' คน)',
                                    fillStyle: data.datasets[0].backgroundColor[i],
                                    hidden: false,
                                    index: i
                                };
                            });
                        }
                    }
                },
                tooltip: {
                    backgroundColor: 'rgba(0, 0, 0, 0.8)',
                    padding: 12,
                    cornerRadius: 8,
                    titleFont: {
                        size: 14,
                        family: 'Inter'
                    },
                    bodyFont: {
                        size: 13,
                        family: 'Inter'
                    },
                    callbacks: {
                        label: function(context) {
                            let label = context.label || '';
                            let value = context.parsed;
                            let total = context.dataset.data.reduce((a, b) => a + b, 0);
                            let percentage = ((value / total) * 100).toFixed(0);
                            return label + ': ' + value + ' คน (' + percentage + '%)';
                        }
                    }
                }
            },
            animation: {
                animateRotate: true,
                animateScale: true,
                duration: 2000,
                easing: 'easeInOutQuart'
            }
        }
    });

    // เพิ่ม 3D effect สำหรับ Pie Chart
    const pieWrapper = document.querySelector('.pie-wrapper');
    pieWrapper.addEventListener('mousemove', (e) => {
        const rect = pieWrapper.getBoundingClientRect();
        const x = e.clientX - rect.left;
        const y = e.clientY - rect.top;
        const centerX = rect.width / 2;
        const centerY = rect.height / 2;
        const rotateY = (x - centerX) / 20;
        const rotateX = -(y - centerY) / 20;

        pieWrapper.style.transform = `rotateX(${rotateX}deg) rotateY(${rotateY}deg) translateZ(10px)`;
    });

    pieWrapper.addEventListener('mouseleave', () => {
        pieWrapper.style.transform = 'rotateX(0deg) rotateY(0deg) translateZ(0px)';
    });

    // ฟังก์ชันอัพเดทข้อมูล
    function updateDashboard(actualValue) {
        document.getElementById('actualValue').textContent = actualValue.toLocaleString();
    }

    // ตัวอย่างการใช้งาน
    updateDashboard(380);
</script>